<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Trevor Manternach</title><link>https://trevormanternach.com/</link><description>This is my personal weblog.</description><atom:link href="https://trevormanternach.com/feed.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2024 &lt;a href="mailto:trevor@trevormanternach.com"&gt;Trevor Manternach&lt;/a&gt; </copyright><lastBuildDate>Sat, 13 Jan 2024 15:08:25 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Using Bartender to only display Wireguard icon if connected to VPN</title><link>https://trevormanternach.com/2024/01/12/using-bartender-to-only-display-wireguard-icon-if-connected-to-vpn/</link><dc:creator>Trevor Manternach</dc:creator><description>&lt;h4&gt;Intro&lt;/h4&gt;
&lt;p&gt;I don't remember if I figured this out myself or found the suggestion elsewhere, but I just searched and couldn't find anything online so I decided to document this neat trick.&lt;/p&gt;
&lt;p&gt;I use &lt;a href="https://www.macbartender.com/"&gt;Bartender&lt;/a&gt; on all my Macs to clean up my Menu Bar. However I missed being able to glance up and look at the &lt;a href="https://www.wireguard.com/"&gt;Wireguard&lt;/a&gt; icon to tell if I was connected to a Wireguard VPN or not. Bartender has a "Triggers" feature that makes it possible to show certain menu bar icons based on the output of a shell script.&lt;/p&gt;
&lt;h4&gt;Setup&lt;/h4&gt;
&lt;p&gt;Open Bartender settings and visit the Triggers menu. Click Add Trigger. Name your Trigger and leave the "Activate a Preset" alone. Choose your Wireguard icon from the "Select menu bar items". Click Add Trigger Condition and choose Script. Paste the following script:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;scutil --nc list | grep -c -e "\(Connected\).*wireguard"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This script uses the built-in &lt;code&gt;scutil&lt;/code&gt; command to list all VPN connections configured on your Mac. It then uses &lt;code&gt;grep&lt;/code&gt; to filter for only the Wireguard connections that have a status of Connected. The &lt;code&gt;-c&lt;/code&gt; flag on &lt;code&gt;grep&lt;/code&gt; counts the number of lines instead of outputting them. Bartender's Triggers expect a script result of &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt;, or &lt;code&gt;true&lt;/code&gt; to activate the Trigger. As far as I know, Wireguard does not allow you to connect to more than one endpoint at a time, so this script should only ever output a &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I have mine set to run every 1 minute. This means that after you connect to a VPN with Wireguard, it could take the icon up to 1 minute to appear in your Menu Bar. Same thing after you disconnect.&lt;/p&gt;
&lt;p&gt;That's it! Click Done and your new Trigger is live and ready to use.&lt;/p&gt;
&lt;h4&gt;Troubleshooting&lt;/h4&gt;
&lt;p&gt;If this isn't working for you, my best suggestion would be to connect to a VPN with Wireguard and run the script above in your Terminal and verify that it is outputting &lt;code&gt;1&lt;/code&gt;. &lt;/p&gt;</description><guid>https://trevormanternach.com/2024/01/12/using-bartender-to-only-display-wireguard-icon-if-connected-to-vpn/</guid><pubDate>Sat, 13 Jan 2024 02:13:44 GMT</pubDate></item><item><title>Routing Wireguard networks with OSPF on Linux</title><link>https://trevormanternach.com/2023/11/10/routing-wireguard-networks-with-ospf-on-linux/</link><dc:creator>Trevor Manternach</dc:creator><description>&lt;p&gt;I have a couple of Linux servers whose main purpose is to serve as a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/WireGuard"&gt;Wireguard&lt;/a&gt; server. The peers on these servers are a combination of pure clients (like a mobile phone or laptop) and more traditional site-to-site tunnel connections (like a router at a remote location). The site-to-site connections usually are routing a remote network over the wireguard tunnel, something like a /24 network so you can access the far site's local network.&lt;/p&gt;
&lt;p&gt;Wireguard makes this easy to do, you just add the /24 network as an "AllowedIP" for that peer. Wireguard does the work of adding that route to the routing table on the Linux server itself. If this Wireguard server is part of a more complex network, though, you need to be sending these remote networks to your Wireguard server so everyone can access them, not just those using Wireguard. I have been forced to add static routes on my main router to point those networks to my Wireguard servers.&lt;/p&gt;
&lt;p&gt;Enter OSPF! If you are reading this, I am going to assume you know what OSPF is and why it's preferred over static routing. What follows is the steps I took to get my Wireguard "AllowedIPs" network automatically advertised to my main router using OSPF.&lt;/p&gt;
&lt;section id="install-frr"&gt;
&lt;h2&gt;Install FRR&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/FRRouting"&gt;FRR&lt;/a&gt; is a Linux package that implements a lot of networking routing protocols. On your server running Wireguard (I'm assuming Debian/Ubuntu), running  &lt;code class="docutils literal"&gt;apt get install &lt;span class="pre"&gt;-y&lt;/span&gt; frr&lt;/code&gt;  gets everything you need installed. This includes a &lt;code class="docutils literal"&gt;vtysh&lt;/code&gt; command that dumps you into a Cisco IOS-like terminal to configure your OSPF routing.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="enable-ospf-daemon"&gt;
&lt;h2&gt;Enable OSPF daemon&lt;/h2&gt;
&lt;p&gt;Before configuring OSPF, you must enable the ospfd daemon in the FRR config. Edit &lt;code class="docutils literal"&gt;/etc/frr/daemons&lt;/code&gt; and change the &lt;cite&gt;ospfd=no`&lt;/cite&gt; line to read &lt;code class="docutils literal"&gt;ospfd=yes&lt;/code&gt;. Then &lt;code class="docutils literal"&gt;systemctl restart frr&lt;/code&gt; is needed to restart FRR with OSPF enabled.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="configure-ospf-inside-frr"&gt;
&lt;h2&gt;Configure OSPF inside FRR&lt;/h2&gt;
&lt;p&gt;Run &lt;code class="docutils literal"&gt;vtysh&lt;/code&gt; to enter the FRR VTY interface. &lt;code class="docutils literal"&gt;config terminal&lt;/code&gt; to enter configuration mode. Here is the simplest configuration required to enable OSPF:&lt;/p&gt;
&lt;pre class="literal-block"&gt;interface ens160
  ip ospf network point-to-point
!
router ospf
  ospf router-id 192.168.0.0
  redistribute kernel
  redistribute connected
  network 192.168.0.0/31 area 0&lt;/pre&gt;
&lt;p&gt;Here is the same config with my comments explaining the important parts:&lt;/p&gt;
&lt;pre class="literal-block"&gt;interface ens160 # this is your linux interface that is facing your main router.
  ip ospf network point-to-point # I am using a point-to-point style OSPF network, yours might be a broadcast type.
!
router ospf
  ospf router-id 192.168.0.0 # this could be anything, but traditionally this is your LAN IP of this wireguard server
  redistribute kernel # this was the tricky part. This is required to insert the Wireguard "AllowedIPs" networks into OSPF
  redistribute connected # this is required to insert your wg0 (and other) networks in OSPF
  network 192.168.0.0/31 area 0 # this is your LAN network for this wireguard server. Whatever is assigned to ens160 in my case. This is required to establish a neighbor relationship with my router.&lt;/pre&gt;
&lt;p&gt;This guide doesn't cover any of the OSPF configuration on your main router. There are far too many different routers out there to even attempt to cover. The main trick to getting all of this working was stumbling across the &lt;code class="docutils literal"&gt;redistribute kernel&lt;/code&gt; command. I was familiar with the &lt;code class="docutils literal"&gt;redisribute static&lt;/code&gt; and &lt;code class="docutils literal"&gt;redistribute connected&lt;/code&gt; commands from administering Cisco IOS, but the way that Wireguard inserts these routes into the routing table requires use of this &lt;code class="docutils literal"&gt;redistribute kernel&lt;/code&gt; command.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="save-your-changes"&gt;
&lt;h2&gt;Save your changes&lt;/h2&gt;
&lt;p&gt;That's it! You can &lt;code class="docutils literal"&gt;end&lt;/code&gt; and then &lt;code class="docutils literal"&gt;write memory&lt;/code&gt; to save your configuration to &lt;code class="docutils literal"&gt;/etc/frr/frr.conf&lt;/code&gt;. If you miss this part, all of this configuration will be erased when FRR is restarted.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="troubleshooting"&gt;
&lt;h2&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;Here are a couple of commands I used in the &lt;code class="docutils literal"&gt;vtysh&lt;/code&gt; interface to verify my configuration.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;show ip ospf neighbor&lt;/code&gt; - this should return a record showing your neighbor relationship with your main router&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;show ip route kernel&lt;/code&gt; - this should return all of your AllowedIPs networks that you have configured in Wireguard. These are the networks we are redistributing over OSPF.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;show ip ospf interface&lt;/code&gt; - this should return a record indicating &lt;code class="docutils literal"&gt;ens160 is up&lt;/code&gt;, or whatever your LAN interface on your Wireguard server is. You can also see neighbor count here, which should be 1 in a point-to-point OSPF network.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;</description><guid>https://trevormanternach.com/2023/11/10/routing-wireguard-networks-with-ospf-on-linux/</guid><pubDate>Fri, 10 Nov 2023 23:46:25 GMT</pubDate></item><item><title>Python script to retrieve DHCP leases from Palo Alto firewall</title><link>https://trevormanternach.com/2023/11/03/python-script-to-retrieve-dhcp-leases-from-palo-alto-firewall/</link><dc:creator>Trevor Manternach</dc:creator><description>&lt;p&gt;I have been using a Palo Alto PA-220 firewall for my home router for years. It is my DHCP server for my LAN. I often find myself needing to view the DHCP leases to see what IP address some random device (WLED, ESPHome devices, etc.) has. The web interface for the PA-220 is unbearably slow and the SSH CLI takes 30+ seconds after login to give me a prompt.&lt;/p&gt;
&lt;p&gt;To speed up this task, I wrote this fairly simple script using python3. It uses the REST API that PAN-OS has to retrieve the DHCP leases. This script completes for me in less than 1 second. It outputs a JSON object. This works best for me as I find JSON to be humanly-readable and also allows me to pipe it to a utility like &lt;cite&gt;jq&lt;/cite&gt; to filter it quickly.&lt;/p&gt;
&lt;p&gt;Here is the code:&lt;/p&gt;
&lt;pre class="literal-block"&gt;import requests
import json
from xmltodict import parse, ParsingInterrupted
from urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)

host = "192.168.2.1" # IP of Palo-Alto firewall goes here.
key = "KEY_GOES_HERE" # Run `curl -X GET 'https://&amp;lt;host&amp;gt;/api/?type=keygen&amp;amp;user=&amp;lt;username&amp;gt;&amp;amp;password=&amp;lt;password&amp;gt;'` to create API key.
interface = "ethernet1/2" # can also use "all"

def get_dhcp_leases(host, key, interface):
url = "https://{host}/api/?type=op&amp;amp;cmd=&amp;lt;show&amp;gt;&amp;lt;dhcp&amp;gt;&amp;lt;server&amp;gt;&amp;lt;lease&amp;gt;&amp;lt;interface&amp;gt;{interface}&amp;lt;/interface&amp;gt;&amp;lt;/lease&amp;gt;&amp;lt;/server&amp;gt;&amp;lt;/dhcp&amp;gt;&amp;lt;/show&amp;gt;&amp;amp;key={key}".format(host=host, key=key, interface=interface)
response = requests.get(url,verify=False)
return response

if __name__ == "__main__":
dhcp_leases = get_dhcp_leases(host, key, interface)
data = parse(dhcp_leases.content)
entries = data['response']['result']
print(json.dumps(entries, indent=4))&lt;/pre&gt;
&lt;p&gt;I also have this hosted as a &lt;a class="reference external" href="https://gist.github.com/tmanternach/21e3bba23261cbd5bacba2e50588acf6"&gt;gist&lt;/a&gt; on github. Any changes I make to it are more likely to end up there than here. Comments are welcome over there, too!&lt;/p&gt;</description><guid>https://trevormanternach.com/2023/11/03/python-script-to-retrieve-dhcp-leases-from-palo-alto-firewall/</guid><pubDate>Fri, 03 Nov 2023 22:50:34 GMT</pubDate></item><item><title>Control Palo Alto GlobalProtect VPN using AppleScript</title><link>https://trevormanternach.com/2023/08/17/control-palo-alto-globalprotect-vpn-using-applescript/</link><dc:creator>Trevor Manternach</dc:creator><description>&lt;p&gt;I know it's a little strange to still be writing AppleScript in 2023, but this was the best way I found to easily connect and disconnect from a GlobalProtect VPN "automatically". I trigger this from a Keyboard Maestro shortcut, you are free to trigger it any way you wish!&lt;/p&gt;
&lt;p&gt;This is a simple script that will toggle the connect/disconnect state of GlobalProtect on macOS. Tested with the latest version of GlobalProtect (v6.2.0-89) and macOS Ventura (13.4.1).:&lt;/p&gt;
&lt;pre class="literal-block"&gt;(*
Toggle GlobalProtect VPN with AppleScript
Tested using macOS Ventura 13.4.1 and GlobalProtect version 6.2.0-89
Written by Trevor Manternach, August 2023.
*)

tell application "System Events" to tell process "GlobalProtect"
  click menu bar item 1 of menu bar 2
  set statusText to name of static text 1 of window 1
  if statusText is "Not Connected" then
    # GlobalProtect is disconnected, so let's connect
    click button "Connect" of window 1
    set entireContents to entire contents of window 1
  else if statusText is "Connected" then
    # GlobalProtect is connected, so let's disconnect
    set windowText to entire contents of window 1
    repeat with theItem in windowText
      if (class of theItem is button) then
        if (value of attribute "AXTitle" of theItem is "Disconnect") then
          # We found a Disconnect button on the main page, let's click it.
          click theItem
          exit repeat
        else
          # We did not find a Disconnect button on the main page, let's hope there is one in the Settings Menu.
          click button "Global Protect Options Menu" of window 1
          click menu item "Disconnect" of menu "Global Protect Options Menu" of button "Global Protect Options Menu" of window 1
          exit repeat
        end if
      end if
    end repeat
  end if
  click menu bar item 1 of menu bar 2
end tell&lt;/pre&gt;
&lt;p&gt;I also have this hosted as a &lt;a class="reference external" href="https://gist.github.com/tmanternach/cbd4c213eab8569e38d6cd021b6255e5"&gt;gist&lt;/a&gt; on github. Any changes I make to it are more likely to end up there than here. Comments are welcome over there, too!&lt;/p&gt;</description><guid>https://trevormanternach.com/2023/08/17/control-palo-alto-globalprotect-vpn-using-applescript/</guid><pubDate>Fri, 18 Aug 2023 01:35:22 GMT</pubDate></item><item><title>Home Assistant Quick Bar</title><link>https://trevormanternach.com/2023/08/04/home-assistant-quick-bar/</link><dc:creator>Trevor Manternach</dc:creator><description>&lt;p&gt;I discovered that &lt;a class="reference external" href="https://www.home-assistant.io/"&gt;Home Assistant&lt;/a&gt; has a not-so-recent feature called "&lt;a class="reference external" href="https://www.home-assistant.io/docs/tools/quick-bar/"&gt;Quick Bar&lt;/a&gt;" that I somehow missed when it was released in 2020. In short, it allows you to press the &lt;cite&gt;e&lt;/cite&gt; (for entity search) or &lt;cite&gt;c&lt;/cite&gt; (for command search) anywhere in the Home Assistant web interface to access a Spotlight-style search box. This allows you access settings and devices in Home Assistant with just a few keystrokes.&lt;/p&gt;</description><guid>https://trevormanternach.com/2023/08/04/home-assistant-quick-bar/</guid><pubDate>Fri, 04 Aug 2023 23:00:00 GMT</pubDate></item><item><title>Trying out Nikola</title><link>https://trevormanternach.com/2023/07/09/trying-out-nikola.html</link><dc:creator>Trevor Manternach</dc:creator><description>&lt;p&gt;I discovered a new static site generator today, &lt;a class="reference external" href="https://getnikola.com/"&gt;Nikola&lt;/a&gt;.&lt;/p&gt;</description><guid>https://trevormanternach.com/2023/07/09/trying-out-nikola.html</guid><pubDate>Mon, 10 Jul 2023 02:11:29 GMT</pubDate></item><item><title>Audiobooks</title><link>https://trevormanternach.com/2022/11/25/audiobooks.html</link><dc:creator>Trevor Manternach</dc:creator><description>&lt;p&gt;Itâs been years since I last paid for an Audible.com subscription. I just signed up this week ($5/month for 3 months) and itâs been a delight so far. I discovered that you can pretty easily remove the DRM on the audiobook .aax file. I am using &lt;a href="https://audible-converter.ml/"&gt;Audible Tools&lt;/a&gt; to help me create the ffmpeg command to do this.&lt;/p&gt;
&lt;p&gt;Another recent discovery is that &lt;a href="https://overcast.fm/"&gt;Overcast&lt;/a&gt;, my podcast player of choice, seems to natively support .m4b files (audiobook file format). It even includes artwork and chapters, so it behaves just like most of the podcasts I listen to.&lt;/p&gt;</description><guid>https://trevormanternach.com/2022/11/25/audiobooks.html</guid><pubDate>Sat, 26 Nov 2022 00:39:11 GMT</pubDate></item><item><title>1997 Photo at computer</title><link>https://trevormanternach.com/2022/08/18/the-earliest-photo.html</link><dc:creator>Trevor Manternach</dc:creator><description>&lt;p&gt;The earliest photo I have of me at a computer. Circa 1997!&lt;/p&gt;
&lt;img alt="/images/1997-Trevor.jpg" src="https://trevormanternach.com/images/1997-Trevor.jpg"&gt;</description><guid>https://trevormanternach.com/2022/08/18/the-earliest-photo.html</guid><pubDate>Thu, 18 Aug 2022 16:35:00 GMT</pubDate></item><item><title>My iPod history</title><link>https://trevormanternach.com/2022/06/04/my-ipod-history.html</link><dc:creator>Trevor Manternach</dc:creator><description>&lt;p&gt;Last month Apple &lt;a href="https://www.apple.com/newsroom/2022/05/the-music-lives-on/"&gt;announced&lt;/a&gt; the end of the iPod. I thought it might be fun to document my history with the product.&lt;/p&gt;
&lt;p&gt;--&lt;/p&gt;
&lt;p&gt;I got my first iPod in March 2005. I believe I bought mine at Best Buy on a weekend trip 350 miles away from home.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://trevormanternach.com/images/4th-Gen-iPod.jpg" width="600" alt="Picture of my first iPod"&gt;&lt;/p&gt;
&lt;p&gt;I was listening to a lot of podcasts in those early days and had to use &lt;a href="https://en.wikipedia.org/wiki/Juice_(aggregator)"&gt;"podcatcher" software&lt;/a&gt; because iTunes didn't support podcasts yet. That changed later that year when &lt;a href="https://en.wikipedia.org/wiki/History_of_iTunes#iTunes_4"&gt;iTunes 4.9&lt;/a&gt; added podcasts and the rest is history.&lt;/p&gt;
&lt;p&gt;I visited that same Best Buy a couple years later when the iPod Touch was released. I remember checking their website and they said they had them in stock, but when I got to the store I couldn't find them. I finally asked and they were still in the back, they went and got one for me.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://trevormanternach.com/images/iPod-Touch.jpg" width="600" height="450" alt="My first iPod Touch"&gt;&lt;/p&gt;
&lt;p&gt;The iPod Touch was so much fun back then. The iPhone wasn't "in" Montana back then (no joke) and so the Touch was as close as I could get. I remember jailbreaking the thing, and even hanging out in IRC chatrooms trying to troubleshoot my jailbreak attempts. :-D&lt;/p&gt;
&lt;p&gt;This past winter I spent ~$100 on new parts to revive my old 4th gen iPod. It now has new life with &lt;a href="https://www.ifixit.com/Store/iPod/iPod-4G-Photo-Battery/IF193-016?o=3"&gt;a fresh battery&lt;/a&gt; and &lt;a href="https://www.iflash.xyz/store/iflash-solo/"&gt;an SD card&lt;/a&gt; in place of the 20GB spinning hard drive. It's hard to believe a piece of consumer technology from 17 years ago is still alive and well.&lt;/p&gt;
&lt;p&gt;I love iPod. It was one of my first adventures into a lifetime of technology.&lt;/p&gt;</description><guid>https://trevormanternach.com/2022/06/04/my-ipod-history.html</guid><pubDate>Sat, 04 Jun 2022 13:41:00 GMT</pubDate></item><item><title>AdGuard Wildcard DNS with Nginx Proxy Manager</title><link>https://trevormanternach.com/2022/04/30/adguard-wildcard-dns-with-nginx-proxy-manager.html</link><dc:creator>Trevor Manternach</dc:creator><description>&lt;p&gt;I started using Nginx Proxy Manger at home recently and found a fast and easy way to add internal domains to it. Here is a simple walkthrough.&lt;/p&gt;
&lt;h4&gt;Prerequisites&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;You need to be using &lt;a href="https://adguard.com/en/adguard-home/overview.html"&gt;AdGuard Home&lt;/a&gt; for DNS&lt;/li&gt;
&lt;li&gt;You want to quickly add new domains to &lt;a href="https://nginxproxymanager.com/"&gt;Nginx Proxy Manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;AdGuard Home setup&lt;/h4&gt;
&lt;p&gt;In the AdGuard Home web interface, go to Filters-&amp;gt;DNS rewrites.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot of DNS rewrite options on AdGuard Home" src="https://trevormanternach.com/images/adguard-1.png" title="Screenshot of DNS rewrite options on AdGuard Home"&gt;&lt;/p&gt;
&lt;p&gt;Click &lt;strong&gt;Add DNS rewrite&lt;/strong&gt; and enter something like &lt;em&gt;*.home&lt;/em&gt; in the domain name field.&lt;/p&gt;
&lt;p&gt;Enter the IP address of your NPM host and click &lt;strong&gt;Save&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;Nginx Proxy Manager&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Screenshot of Nginx Proxy Manager" src="https://trevormanternach.com/images/nginx-1.png" title="Screenshot of Nginx Proxy Manager"&gt;&lt;/p&gt;
&lt;p&gt;There really isn't anything special to do in NPM. Just add a Proxy Host and in the domain names field you can enter anything as long as it ends in .home (or whatever you chose for a wildcard). www.home even works!&lt;/p&gt;
&lt;p&gt;Another little feature I discovered while setting this up is that I can add multiple domain names for each proxy host. So &lt;em&gt;adguard.home&lt;/em&gt; and &lt;em&gt;dns.home&lt;/em&gt; can both get me to the same place. This helps when I can't remember the name of a service, or when you change software you can keep using something like &lt;em&gt;dashboard.home&lt;/em&gt; for your &lt;a href="https://github.com/bastienwirtz/homer"&gt;dashboard of choice&lt;/a&gt;.&lt;/p&gt;</description><category>adguard</category><category>dns</category><category>tutorial</category><guid>https://trevormanternach.com/2022/04/30/adguard-wildcard-dns-with-nginx-proxy-manager.html</guid><pubDate>Sun, 01 May 2022 02:59:42 GMT</pubDate></item></channel></rss>